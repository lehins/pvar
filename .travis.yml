sudo: false

env:
  global: # disable doctests until they are implemented
    - DOCTESTS_DISABLED: true

# Do not choose a language; we provide our own build tools.
language: generic

cache:
  directories:
  - $HOME/.stack
  - $TRAVIS_BUILD_DIR/.stack-work
  - $TRAVIS_BUILD_DIR/pvar/.stack-work
  timeout: 360

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
matrix:
  include:

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.

  # - env: GHC="7.10.2" RESOLVER="lts-3.22" STACK_YAML="stack-lts-3.yaml"
  #   compiler: ": #stack GHC-7.10.2 (lts-3.22)"
  #   addons:
  #     apt:
  #       packages: [libgmp-dev]

  # - env: GHC="7.10.3" RESOLVER="lts-6.35" STACK_YAML="stack-lts-3.yaml"
  #   compiler: ": #stack GHC-7.10.3 (lts-6.35)"
  #   addons:
  #     apt:
  #       packages: [libgmp-dev]

  # - env: GHC="8.0.1" RESOLVER="lts-7.24" STACK_YAML="stack-lts-7.yaml"
  #   compiler: ": #stack GHC-8.0.1 (lts-7.27)"
  #   addons:
  #     apt:
  #       packages: [libgmp-dev]

  # - env: GHC="8.0.2" RESOLVER="lts-8.24" STACK_YAML="stack-lts-7.yaml"
  #   compiler: ": #stack GHC-8.0.2 (lts-8.27)"
  #   addons:
  #     apt:
  #       packages: [libgmp-dev]

  # - env: GHC="8.2.2" RESOLVER="lts-10.10" STACK_YAML="stack-lts-10.yaml"
  #   compiler: ": #stack GHC-8.2.2 (lts-10.10)"
  #   addons:
  #     apt:
  #       packages: [libgmp-dev]

  # - env: GHC="8.2.2" RESOLVER="lts-11.22" STACK_YAML="stack-lts-10.yaml"
  #   compiler: ": #stack GHC-8.2.2 (lts-11.22)"
  #   addons:
  #     apt:
  #       packages: [libgmp-dev]

  - env: GHC="8.4.3" RESOLVER="lts-12.14" STACK_YAML="stack-lts-12.yaml"
    compiler: ": #stack GHC-8.4.3 (lts-12.14)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: GHC="8.4.4" RESOLVER="lts-12.26" STACK_YAML="stack-lts-12.yaml"
    compiler: ": #stack GHC-8.4.4 (lts-12.26)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: GHC="8.6.3" RESOLVER="lts-13.9" STACK_YAML="stack-lts-12.yaml"
    compiler: ": #stack GHC-8.6.3 (lts-13.9)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: GHC="8.6.4" RESOLVER="lts-13.19" STACK_YAML="stack-lts-12.yaml"
    compiler: ": #stack GHC-8.6.4 (lts-13.19)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: GHC="8.6.5" RESOLVER="lts-13.30" STACK_YAML="stack-lts-12.yaml"
    compiler: ": #stack GHC-8.6.5 (lts-13.30)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: GHC="8.6.5" RESOLVER="lts-14.27" COVERALLS_STACK_YAML="stack.yaml"
    compiler: ": #stack GHC-8.6.5 (lts-14.27)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: GHC="8.8.2" RESOLVER="lts-15.3"
    compiler: ": #stack GHC-8.8.2 (lts-15.3)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: GHC="8.8.3" RESOLVER="lts-15"
    compiler: ": #stack GHC-8.8.3 (lts-15)"
    addons:
      apt:
        packages: [libgmp-dev]

  # Nightly builds are allowed to fail
  - env: RESOLVER="nightly"
    compiler: ": #stack nightly"
    addons:
      apt:
        packages: [libgmp-dev]

  allow_failures:
  - env: RESOLVER="nightly"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

- mkdir -p ~/.local/bin
- |
  # script for restoring file modification times, so only changed modules get rebuilt
  travis_retry curl -s -L https://gist.githubusercontent.com/lehins/fd36a8cc8bf853173437b17f6b6426ad/raw/4702d0252731ad8b21317375e917124c590819ce/git-modtime.hs -o git-modtime.hs
  # get stack
  if [ "$TRAVIS_OS_NAME" = "osx" ]
  then
    travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

script:
- |
  set -ex
  #while [ true ] ; do echo "Prevent death by Travis due to no output"; sleep 540; done &
  # Restore modification time for cache utilization and install all needed depndencies
  stack script --resolver $RESOLVER git-modtime.hs --package base --package time --package directory --package process
  ARGS="--resolver $RESOLVER"
  BUILD_ARGS="--bench --no-run-benchmarks --haddock --no-haddock-deps"
  if [ -n "${COVERALLS_STACK_YAML}" ] && [ -n "${COVERALLS_REPO_TOKEN}" ]; then
     stack $ARGS --stack-yaml="$COVERALLS_STACK_YAML" test pvar:tests --coverage $BUILD_ARGS
     stack $ARGS --stack-yaml="$COVERALLS_STACK_YAML" hpc report --all
     travis_retry curl -L https://github.com/lehins/stack-hpc-coveralls/releases/download/0.0.5.0/shc.tar.gz | tar xz shc
     STACK_YAML="$COVERALLS_STACK_YAML" ./shc --repo-token=$COVERALLS_REPO_TOKEN combined custom
     if [ -z "$DOCTESTS_DISABLED" ]; then
       stack $ARGS --stack-yaml="$COVERALLS_STACK_YAML" test pvar:doctests --coverage $BUILD_ARGS
     fi
  else
    stack $ARGS test pvar:tests $BUILD_ARGS
    if [ -z "$DOCTESTS_DISABLED" ]; then
      stack $ARGS test pvar:doctests $BUILD_ARGS
    fi
  fi
  set +ex
